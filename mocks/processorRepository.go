// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// processorRepository is an autogenerated mock type for the processorRepository type
type processorRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, transactionsPerMonth, totalBalance, avgCredit, avgDebit, creditCount, debitCount, name, email
func (_m *processorRepository) Save(ctx context.Context, transactionsPerMonth map[string]uint, totalBalance float64, avgCredit float64, avgDebit float64, creditCount uint, debitCount uint, name string, email string) error {
	ret := _m.Called(ctx, transactionsPerMonth, totalBalance, avgCredit, avgDebit, creditCount, debitCount, name, email)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]uint, float64, float64, float64, uint, uint, string, string) error); ok {
		r0 = rf(ctx, transactionsPerMonth, totalBalance, avgCredit, avgDebit, creditCount, debitCount, name, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newProcessorRepository creates a new instance of processorRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newProcessorRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *processorRepository {
	mock := &processorRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
